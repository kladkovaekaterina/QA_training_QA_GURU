plugins {
    id 'java-library' // язык проекта
    id 'io.qameta.allure' version '2.11.2' // allure gradle plugin (groovy) -> https://plugins.gradle.org/plugin/io.qameta.allure
}

allure { // конфигурация из https://github.com/allure-framework/allure-gradle
    report {
        version.set("2.25.0") // версия аллюра из https://github.com/allure-framework/allure2
    }
    adapter { // конфигурация отвечает за build/allure-results (сборка результатов тестов в json)
        aspectjWeaver.set(true) // обработка аннотации @Step
        frameworks {
            junit5 { // фреймворк
                adapterVersion.set("2.25.0") // версия интеграции фреймфорка и Allure
            }
        }
    }
}

repositories {
    mavenCentral() // mavenCentral – это сайт, который таким образом зашит -> https://mvnrepository.com/ - хранилище для всех библиотек java в публичном доступе (selenide, junit и др.), ищем в строке поиска «selenide», заходим в нужную версию и во вкладке gradle(short) указано в implementation 'com.codeborne:selenide:7.1.0' как их импортить в проекте (см. testImplementation ниже)
}

dependencies { // подключение внешних библиотек
    testImplementation( // testImplementation – значит будет работать только в src/test, если нужно в main тоже, то будет просто Implementation
            "com.codeborne:selenide:7.1.0",
            "org.junit.jupiter:junit-jupiter:5.10.2")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform() // JUnit 5
}
